<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:supermap="http://www.supermap.com/mobile/2010"
		actionBarVisible="true"
		creationComplete="creationCompleteHandler(event)"
		resize="resizeHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.component.popup.MapDirContainer;
			import com.util.AppEvent;
			import com.util.QueryUtil;
			import com.util.SystemConfigUtil;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.utils.StringUtil;
			
			import spark.components.SkinnablePopUpContainer;
			import spark.events.IndexChangeEvent;
			
			private const QUERYSTATE:String = "QueryState";
			private const BROWSESTATE:String = "BrowseState";
			
			[Bindable]
			private var dm:DataManager = DataManager.getInstance();
			
			/**定义关键字查询对象*/
			private var queryUtil:QueryUtil;
			
			private var systemConfigUtil:SystemConfigUtil;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				AppEvent.addListener(AppEvent.MBTILES_PATH_CHANGE, mbtilesPathChangeHandler);
				dm.initMap(this.map);
				
				dm.addTdtLayer();
				
				//初始化查询对象
				queryUtil = dm.getQueryUtil();
				
				//初始化获取列表
				searchBtn_clickHandler();
			}
			
			//修改mbtiles文件夹，重新获取查询对象
			private function mbtilesPathChangeHandler(event:AppEvent):void
			{
				setMapDir_clickHandler();
				//初始化查询对象
				queryUtil = dm.getQueryUtil(true);
				
				//初始化获取列表
				searchBtn_clickHandler();
				
				mbLayerNameList_changeHandler();
			}
			
			protected function mbLayerNameList_changeHandler():void
			{
				if (mbLayerNameList.selectedItem != null){
					dm.addMbLayer(mbLayerNameList.selectedItem);
				} else {
				    if (dm.imageBaseLayer && map && map.getLayer(dm.imageBaseLayer.id) != null) {
						map.removeLayer(dm.imageBaseLayer);
						dm.imageBaseLayer = null;
					}
				}
			}
			
			/**全幅*/
			protected function fullMapBtn_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.map.viewBounds = dm.mapViewBounds;
			}
			
			/**放大*/
			protected function zoomInBtn_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.map.zoomIn();
			}
			
			/**缩小*/
			protected function zoomOutBtn_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.map.zoomOut();
			}
			
			
			
			protected function ShowQueryPanel_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState = QUERYSTATE;
			}
			
			protected function HideQueryPanel_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState = BROWSESTATE;
			}
			
			protected function searchBtn_clickHandler():void
			{
				var keyWord:String = dataKeyWord.text;
				keyWord = StringUtil.trim(keyWord);
				var level:int = -1;
				var cityCode:String = "";
				var countryCode:String = "";
				
				if (mapLevelId != null && mapLevelId.selectedIndex > 0) {
					level = mapLevelId.selectedItem.value;
				}
				
				if (cityId != null && cityId.selectedIndex > 0) {
					cityCode = cityId.selectedItem.NODE_ID;
					if (countyId.selectedIndex > 0) {
						countryCode = countyId.selectedItem.NODE_ID;
					}
				}
				var resultList:Array = queryUtil.queryByName(keyWord, cityCode, countryCode, level);
				mbLayerNameList.dataProvider = new ArrayCollection(resultList);
				queryResultInfoLb.text = "共" + resultList.length +"条记录";
				//当不存在记录时，隐藏离线地图图层
				if(resultList.length == 0 && dm.imageBaseLayer != null)
				{
					dm.imageBaseLayer.visible = false;
					dm.map.refresh();
				} else {
					mbLayerNameList.selectedIndex = 0;
				}
			}
			
			//-------------------------------------------
			private var popup:MapDirContainer = null;
			private var isShowPopup:Boolean = false;//默认不显示弹出面板
			/**所有的弹出窗口统一响应*/
			protected function openPopUP(_popup:SkinnablePopUpContainer,CLS:Class, popupY:Number = -1):Object
			{
				if(_popup == null)
				{
					_popup = new CLS();
				}				
				_popup.width = systemManager.screen.width;  
				_popup.height = systemManager.screen.height;  
				if(popupY == -1)
				{
					_popup.y = FlexGlobals.topLevelApplication.navigator.y + FlexGlobals.topLevelApplication.actionBar.height;
				}
				else
				{
					_popup.y = popupY;
				}
				
				//如果窗口关闭则打开
				if(!_popup.isOpen)
				{
					_popup.open(this, false);
				}
				
				return _popup ;
			}
			
			//设置离线地图目录
			protected function setMapDir_clickHandler():void
			{
				if (popup != null && popup.isOpen)  
				{  
					popup.close();
					this.isShowPopup = false;
				}
				else
				{
					popup = openPopUP(popup,MapDirContainer) as MapDirContainer;
					this.isShowPopup = true;
				}
			}
			
			protected function resizeHandler(event:ResizeEvent):void
			{
				if(isShowPopup)
				{
					popup = openPopUP(popup,MapDirContainer) as MapDirContainer;
				}
			}
			
			/*protected function ImageAlpha_clickHandler(event:MouseEvent):void
			{
			imageAlphaSlider.visible = !imageAlphaSlider.visible;
			}*/
			
			protected function imageAlphaSlider_changeHandler(event:Event):void
			{
				if (dm.imageBaseLayer != null) {
					dm.imageBaseLayer.alpha = imageAlphaSlider.value;
				}
			}
			
			[Bindable]
			private var mapLevelCol:ArrayCollection = new ArrayCollection([
				{name:"----", value:-1},
				{name:"第1级", value:1},
				{name:"第2级", value:2},
				{name:"第3级", value:3},
				{name:"第4级", value:4},
				{name:"第5级", value:5},
				{name:"第6级", value:6},
				{name:"第7级", value:7},
				{name:"第8级", value:8},
				{name:"第9级", value:9},
				{name:"第10级", value:10},
				{name:"第11级", value:11},
				{name:"第12级", value:12},
				{name:"第13级", value:13},
				{name:"第14级", value:14},
				{name:"第15级", value:15},
				{name:"第16级", value:16},
				{name:"第17级", value:17}
			]);
			
			protected function cityId_changeHandler(event:IndexChangeEvent):void
			{
				if (cityId.dataProvider != null && cityId.selectedIndex > 0 ) {
					countyId.dataProvider = systemConfigUtil.queryCountryList(cityId.selectedItem.NODE_ID);
					countyId.selectedIndex = 0;
				} else {
					countyId.dataProvider = null;
				}
				countyId_valueCommitHandler();
			}
			
			protected function cityId_creationCompleteHandler(event:FlexEvent):void
			{
				//初始化行政区划查询数据
				systemConfigUtil = dm.getSystemConfigUtil();
				cityId.dataProvider = systemConfigUtil.queryCityList();
				cityId.selectedIndex = 0;				
			}
			
			protected function countyId_valueCommitHandler():void
			{
				if (cityId.dataProvider != null ) {
					searchBtn_clickHandler();
				}
			}
			
			protected function mapLevelId_changeHandler(event:IndexChangeEvent):void
			{
				countyId_valueCommitHandler();
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="QueryState"/>
		<s:State name="BrowseState"/>
	</s:states>
	<s:titleContent>
		<s:Label id="systemTitle" text="{dm.systemTitle}" width="100%" height="100%" textAlign="center" verticalAlign="middle" backgroundAlpha="0"/>
	</s:titleContent>
	<s:navigationContent>	
		<s:Button id="ShowQueryPanel" toolTip="显示查询面板" icon="{dm.iconAssembly.listIcon}" click="ShowQueryPanel_clickHandler(event)"
				  includeIn="BrowseState" />
		<s:Button id="HideQueryPanel" toolTip="隐藏查询面板" icon="{dm.iconAssembly.returnIcon}" click="HideQueryPanel_clickHandler(event)" 
				  includeIn="QueryState"/>
	</s:navigationContent>
	<s:actionContent>
		<s:Button id="setMapDir" icon="{dm.iconAssembly.userIcon}" toolTip="设置地图目录" click="setMapDir_clickHandler()"/>
	</s:actionContent>
	<!--<s:HGroup width="100%" height="100%">-->
	<supermap:Map id="map" width="100%" height="100%"/>
	<s:Group height="100%"
			 includeIn="QueryState" left="0">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="#FFFFFF" alpha="0.5"/>
			</s:fill>
		</s:Rect>
		<s:VGroup height="100%" width="{320*dm.mapUIScale}" paddingLeft="{5*dm.multiResolution}"
				  paddingTop="{5*dm.multiResolution}" paddingRight="{5*dm.multiResolution}"
				  horizontalAlign="right" verticalAlign="top">
			<s:HGroup width="100%" gap="{5*dm.multiResolution}" horizontalAlign="left" verticalAlign="middle">
				<s:Label text="关键字：" height="100%" verticalAlign="middle" backgroundAlpha="0"/>
				<s:TextInput id="dataKeyWord" prompt="输入查询关键字" width="100%" contentBackgroundAlpha="0"/>
			</s:HGroup>
			<s:HGroup width="100%" gap="{5*dm.multiResolution}" horizontalAlign="left" verticalAlign="middle">
				<s:CalloutButton id="conditionSetting" label="高级查询设置>>" 
								 iconPlacement="right" 
								 horizontalPosition="auto"
								 verticalPosition="auto"
								 skinClass="com.skin.PopupButtonSkin">
					<s:calloutContent>
						<s:HGroup width="100%" height="100%">
							<s:VGroup>
								<s:Label text="地图级别" verticalAlign="middle" fontWeight="bold" textAlign="center"
										 height="{48*dm.multiResolution}" width="{144*dm.multiResolution}"/>
								<s:SpinnerListContainer width="100%" horizontalCenter="0" top="20" bottom="20">
									<s:SpinnerList id="mapLevelId" height="100%" width="100%" 
												   selectedIndex="0" 
												   typicalItem="999" dataProvider="{mapLevelCol}" labelField="name"
												   change="mapLevelId_changeHandler(event)">
									</s:SpinnerList>
								</s:SpinnerListContainer>
							</s:VGroup>
							<s:VGroup>
								<s:Label text="查询区域" verticalAlign="middle" fontWeight="bold" textAlign="center"
										 height="{48*dm.multiResolution}" width="{256*dm.multiResolution}"/>
								<s:SpinnerListContainer width="100%" horizontalCenter="0" top="20" bottom="20">
									<s:SpinnerList id="cityId" height="100%" width="100%" typicalItem="999"
												   labelField="NODE_NAME"
												   selectedIndex="0" change="cityId_changeHandler(event)" 
												   creationComplete="cityId_creationCompleteHandler(event)">
									</s:SpinnerList>
									<s:SpinnerList id="countyId" height="100%" width="100%" typicalItem="999"
												   labelField="NODE_NAME"
												   selectedIndex="0" valueCommit="countyId_valueCommitHandler()">
									</s:SpinnerList>
								</s:SpinnerListContainer>
							</s:VGroup>
						</s:HGroup>
					</s:calloutContent>
				</s:CalloutButton>
				<s:Spacer width="100%"/>
				<s:Button id="searchBtn"
						  label="查询"
						  icon="{dm.iconAssembly.queryIcon}" 
						  iconPlacement="left"
						  skinClass="com.skin.QueryButtonSkin"
						  click="searchBtn_clickHandler()"/>
			</s:HGroup>
			<s:Rect width="100%" height="2">
				<s:fill>
					<s:SolidColor color="#333333"/>
				</s:fill>
			</s:Rect>
			<s:HGroup width="100%" gap="6" horizontalAlign="left" verticalAlign="bottom">
				<s:Label id="queryResultInfoLb" verticalAlign="middle"
						 width="100%" height="{48*dm.multiResolution}" backgroundAlpha="0"/>
			</s:HGroup>	
			<s:List id="mbLayerNameList" width="100%" height="100%"
					requireSelection="true" selectedIndex="0"
					textAlign="left"  contentBackgroundAlpha="0"
					itemRenderer="com.renderer.LayerItemRenderer"
					valueCommit="mbLayerNameList_changeHandler()">							
			</s:List>
		</s:VGroup>
	</s:Group>
	<!--</s:HGroup>-->
	<s:VGroup id="toolGroup" height="100%" right="12" gap="12"
			  horizontalAlign="right" verticalAlign="middle">
		<s:Button id="fullMapBtn" 
				  icon="{dm.iconAssembly.fullIcon}" styleName="OperationButton" click="fullMapBtn_clickHandler(event)"/>	
		<s:Button id="zoomInBtn" 
				  icon="{dm.iconAssembly.zoomInIcon}" styleName="OperationButton" click="zoomInBtn_clickHandler(event)"/>
		<s:Button id="zoomOutBtn" 
				  icon="{dm.iconAssembly.zoomOutIcon}" styleName="OperationButton" click="zoomOutBtn_clickHandler(event)"/>
		<!--<s:VGroup horizontalAlign="right">
		<s:Button id="ImageAlpha" 
		icon="{dm.iconAssembly.userIcon}" styleName="OperationButton" click="ImageAlpha_clickHandler(event)"/>
		<s:HSlider id="imageAlphaSlider" visible="false" includeInLayout="{imageAlphaSlider.visible}" 
		minimum="0" maximum="1"  value="1"  stepSize="0.1" width="{200*dm.multiResolution}"  
		change="imageAlphaSlider_changeHandler(event)"/>
		</s:VGroup>-->
	</s:VGroup>
	<s:HSlider id="imageAlphaSlider" bottom="12" right="12"
			   minimum="0" maximum="1"  value="1"  stepSize="0.1" 
			   width="{200*dm.multiResolution}"  height="{48*dm.multiResolution}"
			   change="imageAlphaSlider_changeHandler(event)"/>
</s:View>
