<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:supermap="http://www.supermap.com/mobile/2010"
		actionBarVisible="true"
		creationComplete="creationCompleteHandler(event)"
		resize="resizeHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.component.popup.MapDirContainer;
			import com.util.AppEvent;
			import com.util.QueryUtil;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.utils.StringUtil;
			
			import spark.components.SkinnablePopUpContainer;
			
			private const QUERYSTATE:String = "QueryState";
			private const BROWSESTATE:String = "BrowseState";
			
			[Bindable]
			private var dm:DataManager = DataManager.getInstance();
			
			/**定义关键字查询对象*/
			private var queryUtil:QueryUtil;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				AppEvent.addListener(AppEvent.MBTILES_PATH_CHANGE, mbtilesPathChangeHandler);
				dm.initMap(this.map);
				
				dm.addTdtLayer();
				
				//初始化查询对象
				queryUtil = dm.getQueryUtil();
				
				//初始化获取列表
				searchBtn_clickHandler();
			}
			
			//修改mbtiles文件夹，重新获取查询对象
			private function mbtilesPathChangeHandler(event:AppEvent):void
			{
				setMapDir_clickHandler();
				//初始化查询对象
				queryUtil = dm.getQueryUtil();
				
				//初始化获取列表
				searchBtn_clickHandler();
			}
			
			protected function mbLayerNameList_changeHandler():void
			{
				if (mbLayerNameList.selectedItem != null){
					dm.addMbLayer(mbLayerNameList.selectedItem);
				}
			}
			
			/**全幅*/
			protected function fullMapBtn_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.map.viewBounds = dm.mapViewBounds;
			}
			
			/**放大*/
			protected function zoomInBtn_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.map.zoomIn();
			}
			
			/**缩小*/
			protected function zoomOutBtn_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.map.zoomOut();
			}
			
			
			
			protected function ShowQueryPanel_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState = QUERYSTATE;
			}
			
			protected function HideQueryPanel_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState = BROWSESTATE;
			}
			
			protected function searchBtn_clickHandler():void
			{
				var keyWord:String = dataKeyWord.text;
				keyWord = StringUtil.trim(keyWord);
				var resultList:Array = queryUtil.queryByName(keyWord);
				mbLayerNameList.dataProvider = new ArrayCollection(resultList);
				queryResultInfoLb.text = "共" + resultList.length +"记录";
			}
			
			//-------------------------------------------
			private var popup:MapDirContainer = null;
			private var isShowPopup:Boolean = false;//默认不显示弹出面板
			/**所有的弹出窗口统一响应*/
			protected function openPopUP(_popup:SkinnablePopUpContainer,CLS:Class, popupY:Number = -1):Object
			{
				if(_popup == null)
				{
					_popup = new CLS();
				}				
				_popup.width = systemManager.screen.width;  
				_popup.height = systemManager.screen.height;  
				if(popupY == -1)
				{
					_popup.y = FlexGlobals.topLevelApplication.navigator.y + FlexGlobals.topLevelApplication.actionBar.height;
				}
				else
				{
					_popup.y = popupY;
				}
				
				//如果窗口关闭则打开
				if(!_popup.isOpen)
				{
					_popup.open(this, false);
				}
				
				return _popup ;
			}
			
			//设置离线地图目录
			protected function setMapDir_clickHandler():void
			{
				if (popup != null && popup.isOpen)  
				{  
					popup.close();
					this.isShowPopup = false;
				}
				else
				{
					popup = openPopUP(popup,MapDirContainer) as MapDirContainer;
					this.isShowPopup = true;
				}
			}
			
			protected function resizeHandler(event:ResizeEvent):void
			{
				if(isShowPopup)
				{
					popup = openPopUP(popup,MapDirContainer) as MapDirContainer;
				}
			}
			
			protected function ImageAlpha_clickHandler(event:MouseEvent):void
			{
				imageAlphaSlider.visible = !imageAlphaSlider.visible;
			}
			
			protected function imageAlphaSlider_changeHandler(event:Event):void
			{
				dm.imageBaseLayer.alpha = imageAlphaSlider.value;
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="QueryState"/>
		<s:State name="BrowseState"/>
	</s:states>
	<s:titleContent>
		<s:Label text="地图应用" width="100%" height="100%" textAlign="center" verticalAlign="middle" backgroundAlpha="0"/>
	</s:titleContent>
	<s:navigationContent>	
		<s:Button id="ShowQueryPanel" toolTip="显示查询面板" icon="{dm.iconAssembly.listIcon}" click="ShowQueryPanel_clickHandler(event)"
				 includeIn="BrowseState" />
		<s:Button id="HideQueryPanel" toolTip="隐藏查询面板" icon="{dm.iconAssembly.returnIcon}" click="HideQueryPanel_clickHandler(event)" 
				  includeIn="QueryState"/>
	</s:navigationContent>
	<s:actionContent>
		<s:Button id="setMapDir" icon="{dm.iconAssembly.userIcon}" toolTip="设置地图目录" click="setMapDir_clickHandler()"/>
	</s:actionContent>
	<!--<s:HGroup width="100%" height="100%">-->
	<supermap:Map id="map" width="100%" height="100%"/>
	<s:Group height="100%"
			 includeIn="QueryState" left="0">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="#FFFFFF"/>
			</s:fill>
		</s:Rect>
		<s:VGroup height="100%" width="{300*dm.mapUIScale}" paddingLeft="{5*dm.multiResolution}"
				  paddingTop="{5*dm.multiResolution}" paddingRight="{5*dm.multiResolution}"
				  horizontalAlign="right" verticalAlign="top">
			<s:HGroup width="100%" gap="{5*dm.multiResolution}" horizontalAlign="left" verticalAlign="middle">
				<s:TextInput id="dataKeyWord" prompt="输入查询关键字" width="100%"/>
				<s:Button id="searchBtn" height="{48*dm.multiResolution}"
						  icon="{dm.iconAssembly.searchIcon}" 
						  iconPlacement="left"
						  click="searchBtn_clickHandler()"/>
			</s:HGroup>
			<s:Rect width="100%" height="1">
				<s:fill>
					<s:SolidColor color="#333333"/>
				</s:fill>
			</s:Rect>
			<s:HGroup width="100%" gap="6" horizontalAlign="left" verticalAlign="bottom">
				<s:Label id="queryResultInfoLb"  width="100%"/>
			</s:HGroup>	
			<s:List id="mbLayerNameList" width="100%" height="100%"
					requireSelection="true" selectedIndex="0"
					textAlign="left"  labelField="name"
					valueCommit="mbLayerNameList_changeHandler()">							
			</s:List>
		</s:VGroup>
	</s:Group>
	<!--</s:HGroup>-->
	<s:VGroup id="toolGroup" height="100%" right="12" gap="12"
			  horizontalAlign="right" verticalAlign="middle">
		<s:Button id="fullMapBtn" 
				  icon="{dm.iconAssembly.fullIcon}" styleName="OperationButton" click="fullMapBtn_clickHandler(event)"/>	
		<s:Button id="zoomInBtn" 
				  icon="{dm.iconAssembly.zoomInIcon}" styleName="OperationButton" click="zoomInBtn_clickHandler(event)"/>
		<s:Button id="zoomOutBtn" 
				  icon="{dm.iconAssembly.zoomOutIcon}" styleName="OperationButton" click="zoomOutBtn_clickHandler(event)"/>
		<s:VGroup horizontalAlign="right">
			<s:Button id="ImageAlpha" 
					  icon="{dm.iconAssembly.userIcon}" styleName="OperationButton" click="ImageAlpha_clickHandler(event)"/>
			<s:HSlider id="imageAlphaSlider" visible="false" includeInLayout="{imageAlphaSlider.visible}" 
					   minimum="0" maximum="1"  value="1"  stepSize="0.1" width="{200*dm.multiResolution}"  
					   change="imageAlphaSlider_changeHandler(event)"/>
		</s:VGroup>
	</s:VGroup>
</s:View>
