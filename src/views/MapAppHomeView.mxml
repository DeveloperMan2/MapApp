<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:supermap="http://www.supermap.com/mobile/2010"
		actionBarVisible="true"
		creationComplete="creationCompleteHandler(event)"
		resize="resizeHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.component.popup.MapDirContainer;
			import com.util.QueryUtil;
			import com.util.RootDirectory;
			import com.util.AppEvent;
			import com.vo.BrowseVO;
			import com.vo.MainVO;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.utils.StringUtil;
			
			import spark.components.SkinnablePopUpContainer;
			import spark.events.IndexChangeEvent;
			
			private const QUERYSTATE:String = "QueryState";
			private const BROWSESTATE:String = "BrowseState";
			
			[Bindable]
			private var dm:DataManager = DataManager.getInstance();
			
//			private var tMake:Timer = null;
			
			/**定义关键字查询对象*/
			private var queryUtil:QueryUtil;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				dm.initMap(this.map);
				
				dm.initAppLayerCol();
				
				AppEvent.addListener(AppEvent.MB_DATACHANGE, mbDataChangeHandler);
				
				if(tMake == null)
				{
					tMake = new Timer(100);
					tMake.addEventListener(TimerEvent.TIMER, loadMbLayerHandler);
					tMake.start();
				}
				
				dm.addTdtLayer();
				
				dm.resetMapPosition(116.091343, 29.738883, 116.209089, 29.760974);
				
				//初始化查询对象
				//复制查询使用的数据库 , 判断文件是否存在，不存在进行复制操作
				var destinaPath:String = MainVO.DataCacheRootPath + MainVO.QueryDBFileName;
				var destinaQueryDbFile:File = RootDirectory.extSDCard.resolvePath(destinaPath);
				if (destinaQueryDbFile.exists == false) {
					var originQueryDbFile:File = File.applicationDirectory.resolvePath(MainVO.QueryOriginPath+File.separator+ MainVO.QueryDBFileName);
					destinaQueryDbFile.parent.createDirectory();
					originQueryDbFile.copyTo(destinaQueryDbFile,true);
				}
				queryUtil = new QueryUtil(destinaQueryDbFile.nativePath);
				queryUtil.open();
			}
			
			private function mbDataChangeHandler(event:AppEvent):void
			{
				loadMbLayerHandler(null);
			}
			
			private function loadMbLayerHandler(event:TimerEvent):void
			{
//				dm.initAppLayerCol();
//				
//				if(dm.ImgLayerArrCol != null && dm.ImgLayerArrCol.length > 0)
//				{
//					var bVo:BrowseVO = dm.ImgLayerArrCol.getItemAt(0) as BrowseVO;
//					
//					if(bVo != null)
//					{
//						dm.addMbLayer(bVo);
//					}
				this.mbLayerNameList.dataProvider = null;
				if(dm.ImgLayerArrCol != null && dm.ImgLayerArrCol.length > 0)
				{
					if(tMake != null)
					{
						tMake.stop();
						tMake.removeEventListener(TimerEvent.TIMER, loadMbLayerHandler);
						tMake = null;
					}
					
					var bVo:BrowseVO = dm.ImgLayerArrCol.getItemAt(0) as BrowseVO;
					
//					tMake.stop();
//					tMake.removeEventListener(TimerEvent.TIMER, loadMbLayerHandler);
//					tMake = null;
//					
//					this.mbLayerNameList.dataProvider = dm.ImgLayerArrCol;
//					this.mbLayerNameList.labelField = "layerName";
//				}
					if(bVo != null)
					{
						dm.addMbLayer(bVo);
					}
					
					this.mbLayerNameList.dataProvider = dm.ImgLayerArrCol;
					this.mbLayerNameList.labelField = "layerName";
				}
			}
			
			protected function mbLayerNameList_changeHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				var bVo:Object = this.mbLayerNameList.selectedItem;
				if(bVo != null)
				{
					dm.addMbLayer(bVo);
					dm.resetMapPosition(116.091343, 29.738883, 116.209089, 29.760974);
				}
			}
			
			/**全幅*/
			protected function fullMapBtn_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				//this.map.viewEntire();
				dm.resetMapPosition(116.091343, 29.738883, 116.209089, 29.760974);
			}
			
			/**放大*/
			protected function zoomInBtn_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.map.zoomIn();
			}
			
			/**缩小*/
			protected function zoomOutBtn_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.map.zoomOut();
			}
			
			
			
			protected function ShowQueryPanel_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState = QUERYSTATE;
			}
			
			protected function HideQueryPanel_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState = BROWSESTATE;
			}
			
			protected function searchBtn_clickHandler(event:MouseEvent):void
			{
				var keyWord:String = dataKeyWord.text;
				keyWord = StringUtil.trim(keyWord);
				//				if (keyWord.length > 0){
				//					
				//				}
				var resultList:Array = queryUtil.queryByName(keyWord);
				mbLayerNameList.dataProvider = new ArrayCollection(resultList);
			}
			
			//-------------------------------------------
			private var popup:MapDirContainer = null;
			private var isShowPopup:Boolean = false;//默认不显示弹出面板
			/**所有的弹出窗口统一响应*/
			protected function openPopUP(_popup:SkinnablePopUpContainer,CLS:Class, popupY:Number = -1):Object
			{
				if(_popup == null)
				{
					_popup = new CLS();
				}				
				_popup.width = systemManager.screen.width;  
				_popup.height = systemManager.screen.height;  
				if(popupY == -1)
				{
					_popup.y = FlexGlobals.topLevelApplication.navigator.y + FlexGlobals.topLevelApplication.actionBar.height;
				}
				else
				{
					_popup.y = popupY;
				}
				
				//如果窗口关闭则打开
				if(!_popup.isOpen)
				{
					_popup.open(this, false);
				}
				
				return _popup ;
			}
			
			//设置离线地图目录
			protected function setMapDir_clickHandler(event:MouseEvent):void
			{
				if (popup != null && popup.isOpen)  
				{  
					popup.close();
					this.isShowPopup = false;
				}
				else
				{
					popup = openPopUP(popup,MapDirContainer) as MapDirContainer;
					this.isShowPopup = true;
				}
			}
			
			protected function resizeHandler(event:ResizeEvent):void
			{
				if(isShowPopup)
				{
					popup = openPopUP(popup,MapDirContainer) as MapDirContainer;
				}
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="QueryState"/>
		<s:State name="BrowseState"/>
	</s:states>
	<s:titleContent>
		<s:Label text="地图应用" width="100%" height="100%" textAlign="center" verticalAlign="middle" backgroundAlpha="0"/>
	</s:titleContent>
	<s:navigationContent>	
		<s:Button id="ShowQueryPanel" toolTip="显示查询面板" icon="{dm.iconAssembly.listIcon}" click="ShowQueryPanel_clickHandler(event)"/>
		<s:Button id="HideQueryPanel" toolTip="隐藏查询面板" icon="{dm.iconAssembly.returnIcon}" click="HideQueryPanel_clickHandler(event)" 
				  includeIn="QueryState"/>
	</s:navigationContent>
	<s:actionContent>
		<s:Button id="setMapDir" icon="{dm.iconAssembly.userIcon}" toolTip="设置地图目录" click="setMapDir_clickHandler(event)"/>
	</s:actionContent>
	<!--<s:HGroup width="100%" height="100%">-->
	<supermap:Map id="map" width="100%" height="100%">
	</supermap:Map>
	<s:Group height="100%"
			 includeIn="QueryState" left="0">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="#FFFFFF"/>
			</s:fill>
		</s:Rect>
		<s:VGroup height="100%" width="{300*dm.mapUIScale}" paddingLeft="5" paddingRight="5"
				  horizontalAlign="right" verticalAlign="top">
			<s:HGroup width="100%" gap="6" horizontalAlign="left" verticalAlign="middle">
				<s:Label text="名称:"/>
				<s:TextInput id="dataKeyWord" width="100%"/>
			</s:HGroup>
			<s:HGroup width="100%" gap="6" horizontalAlign="left" verticalAlign="middle">
				<s:Label text="范围:"/>
				<s:TextInput id="dataRange"
							 width="100%"/>
			</s:HGroup>	
			<s:HGroup width="100%" gap="6" horizontalAlign="left" verticalAlign="bottom">
				<s:Label id="queryResultInfoLb" text="" width="100%"/>
				<s:Button id="searchBtn" height="{48*dm.multiResolution}"
						  icon="{dm.iconAssembly.searchIcon}" 
						  iconPlacement="left"
						  click="searchBtn_clickHandler(event)"/>
			</s:HGroup>	
			<s:Rect width="100%" height="2">
				<s:fill>
					<s:SolidColor color="#000000"/>
				</s:fill>
			</s:Rect>
			<s:List id="mbLayerNameList" width="100%" height="100%"
					requireSelection="true" selectedIndex="0"
					textAlign="left"  labelField="name"
					click="mbLayerNameList_changeHandler(event)">							
			</s:List>
		</s:VGroup>
	</s:Group>
	<!--</s:HGroup>-->
	<s:VGroup id="toolGroup" height="100%" right="12" gap="12"
			  horizontalAlign="right" verticalAlign="middle">
		<s:Button id="fullMapBtn" 
				  icon="{dm.iconAssembly.fullIcon}" styleName="OperationButton" click="fullMapBtn_clickHandler(event)"/>	
		<s:Button id="zoomInBtn" 
				  icon="{dm.iconAssembly.zoomInIcon}" styleName="OperationButton" click="zoomInBtn_clickHandler(event)"/>
		<s:Button id="zoomOutBtn" 
				  icon="{dm.iconAssembly.zoomOutIcon}" styleName="OperationButton" click="zoomOutBtn_clickHandler(event)"/>
	</s:VGroup>
</s:View>
